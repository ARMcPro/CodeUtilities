plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '4.0.4'
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

apply plugin: 'idea'

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'CottonMC'
        url = 'https://server.bbkr.space/artifactory/libs-release'
    }
    maven {
        name = 'Jitpack'
        url = "https://jitpack.io"
    }
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
	maven {
		url "https://maven.terraformersmc.com/"
	}
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
    //dfrpc
    compileOnly 'com.jagrosh:DiscordIPC:0.4'

    //websocket client
    compileOnly "org.java-websocket:Java-WebSocket:1.5.1"

    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    //https://github.com/CottonMC/LibGui/releases //API
    modImplementation "io.github.cottonmc:LibGui:4.0.0+1.17"
    modImplementation "javax.websocket:javax.websocket-api:1.1"
    modImplementation "org.glassfish.tyrus:tyrus-server:1.1"
    modImplementation "org.glassfish.tyrus:tyrus-client:1.1"
    modImplementation "org.glassfish.tyrus:tyrus-container-grizzly:1.1"
    modImplementation 'io.socket:socket.io-client:2.0.0'
	modImplementation "com.terraformersmc:modmenu:2.0.0-beta.7"
	modImplementation "me.shedaniel.cloth:cloth-config-fabric:5.0.34"

    //include "com.google.code.gson:gson:2.8.6"
    include "io.github.cottonmc:LibGui:4.0.0+1.17"
	include "me.shedaniel.cloth:cloth-config-fabric:5.0.34"
    //websocket things
    include "javax.websocket:javax.websocket-api:1.1"
    include "org.glassfish.tyrus:tyrus-websocket-core:1.1"
    include "org.glassfish.tyrus:tyrus-spi:1.1"
    include "org.glassfish.tyrus:tyrus-server:1.1"
    include "org.glassfish.tyrus:tyrus-core:1.1"
    include "org.glassfish.tyrus:tyrus-container-grizzly:1.1"
    include "org.glassfish.grizzly:grizzly-rcm:2.3.3"
    include "org.glassfish.grizzly:grizzly-http-server:2.3.3"
    include "org.glassfish.grizzly:grizzly-http:2.3.3"
    include "org.glassfish.grizzly:grizzly-framework:2.3.3"
    compileOnly 'io.socket:socket.io-client:2.0.0'

    // API stuff
    include 'javax.websocket:javax.websocket-api:1.1'
    include "org.java-websocket:Java-WebSocket:1.5.1"
    include 'org.glassfish.tyrus:tyrus-server:1.1'
    include 'org.glassfish.tyrus:tyrus-client:1.1'
    include 'org.glassfish.tyrus:tyrus-container-grizzly:1.1'
    include 'org.glassfish.tyrus:tyrus-spi:1.1'
    include 'org.glassfish.tyrus:tyrus-websocket-core:1.1'
    include 'org.glassfish.tyrus:tyrus-core:1.1'

    include 'org.glassfish.grizzly:grizzly-rcm:2.3.3'
    include 'org.glassfish.grizzly:grizzly-framework:2.3.3'
    include 'org.glassfish.grizzly:grizzly-http-server:2.3.3'
    include 'org.glassfish.grizzly:grizzly-http:2.3.3'

    //TODO: wait for databreaker to update to 1.17
//    modRuntime("com.github.SuperCoder7979:databreaker:0.2.6") {
//        exclude module: "fabric-loader"
//    }
}

javafx {
    modules = [ 'javafx.media' ]
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                builtBy remapJar
            }
            artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        jcenter()
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
